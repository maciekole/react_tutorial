{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","_super","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","card_list_component_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"2SAGaA,SAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,UAAKH,EAAMQ,QAAQE,MACnBT,EAAAC,EAAAC,cAAA,SAAIH,EAAMQ,QAAQG,UCHbC,SAAW,SAAAZ,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVJ,EAAMa,SAASC,IACZ,SAAAN,GAAO,OACHP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCLnCS,SAAY,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,YAAaC,EAAfF,EAAeE,aAAf,OACrBnB,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCHG,2DApCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAI,EAAAC,KAAAF,OAgBFP,aAAe,SAAAU,GACbN,EAAKO,SAAS,CAACC,YAAeF,EAAEG,OAAOC,SAfvCV,EAAKW,MAAQ,CACXtB,SAAU,GACVmB,YAAa,IALHR,uDAWd,WAAoB,IAAAY,EAAAT,KAClBU,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAAClB,SAAU4B,4BAO1C,WACE,IAAAC,EAAgCf,KAAKQ,MAA9BtB,EAAP6B,EAAO7B,SAAUmB,EAAjBU,EAAiBV,YACXW,EAAmB9B,EAAS+B,OAAO,SAAApC,GAAO,OAAIA,EAAQE,KAAKmC,cAAcC,SAASd,EAAYa,iBACpG,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC4C,EAAD,CACE5B,YAAY,YACZC,aAAcO,KAAKP,eACrBnB,EAAAC,EAAAC,cAAC6C,EAAD,CAAUnC,SAAU8B,YA/BVM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAApB,GAAiD,IAA9CqC,EAA8CrC,EAA9CqC,OAAQC,EAAsCtC,EAAtCsC,OAAQC,EAA8BvC,EAA9BuC,OAAQC,EAAsBxC,EAAtBwC,OAAQC,EAAczC,EAAdyC,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP5D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,WAAP,KACE7D,EAAAC,EAAAC,cAAC4D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.e14e907d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from \"react\";\r\nimport { Card } from \"../card/card.component\";\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(\r\n            monster => (\r\n                <Card key={monster.id} monster={monster}/>\r\n            )\r\n        )}\r\n    </div>\r\n);","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className='search' \r\n        type='search' \r\n        placeholder={placeholder} \r\n        onChange={handleChange}/>\r\n)","import React, { Component } from 'react'; \nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    // this.handleChange = this.handleChange.bind(this)\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange = e => {\n    this.setState({'searchField': e.target.value})\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder='Search...' \n          handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}